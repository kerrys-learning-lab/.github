on:
  workflow_call:
    inputs:
      target:
        description: Sets the target stage to build
        type: string
        default: ""
        required: false
      arm64:
        description: If true, build for ARM architecture
        type: boolean
        default: false
        required: false
    secrets:
      actor_name:
        description: |
          Name of the entity performing the action.
          Repository modifications (created tags, CHANGELOG.md, etc) will be
          attributed to this entity.
        required: true
      actor_token:
        description: |
          GITHUB_TOKEN or PAT authorized to make changes to the repository
        required: true

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-image:
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.actor_name }}
          password: ${{ secrets.actor_token }}

      - name: Sanitize IMAGE_NAME
        id: sanitize
        run: echo "image_name=${IMAGE_NAME/\/\./\/}" >> $GITHUB_OUTPUT

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ steps.sanitize.outputs.image_name }}
          flavor: |
            latest=${{ startsWith( github.ref, 'refs/tags/v') }}
            suffix=${{ inputs.arm64 && '-arm64' || '' }},onlatest=true
          tags: |
            type=semver,pattern=v{{version}}
            type=semver,pattern=v{{major}}
            type=sha,prefix=${{ github.ref_name }}--{{ date 'YYYY-MM-DD' }}--

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: "arm64"
        if: ${{ inputs.arm64 }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          platforms: "arm64"
        if: ${{ inputs.arm64 }}

      - name: Show buildx data
        run: docker buildx ls
        if: ${{ inputs.arm64 }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: ${{ startsWith( github.ref, 'refs/tags/v') || contains(github.event.head_commit.message, '[test ci]') }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: "${{ inputs.arm64 && 'linux/arm64' || 'linux/amd64' }}"
